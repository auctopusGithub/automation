- name: Master Setup repository
  hosts: localhost
  gather_facts: yes

  vars_prompt:

    - name: github_token
      prompt: "Enter your GitHub personal access token"
      private: yes

    - name: docker_token
      prompt: "Enter your Docker Password"
      private: yes

    - name: deployment_type
      prompt: "Enter the deployment type (controller,runner)"
      private: no

    - name: server_ip
      prompt: "Enter the server IP address"
      private: no


  vars:

    auctopus_docker_repo_url: "https://github.com/auctopusGithub/auctopus_docker.git"
    auctopus_docker_dest_dir: "{{ playbook_dir }}/auctopus_docker"
    
    anisble_ssh_user: "automation"
    ansible_ssh_pass: "automation@321"
    ansible_become_pass: "automation@321"
    github_username: "sunnyauctOpus"
    deployment_type: 'controller'    

  tasks:
    - name: Validate deployment type
      fail:
        msg: "Invalid deployment type. Please enter 'controller' or 'runner'."
      when: deployment_type not in ['controller', 'runner']
    
    # - name: Validate server IP address
    #   fail:
    #     msg: "Invalid server IP address. Please enter a valid IP address."
    #   when: server_ip is not match("^(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)$")

    - name: Configure Git with GitHub token
      shell: |
        git config --global credential.helper store
        echo "https://{{ github_username }}:{{ github_token }}@github.com" > ~/.git-credentials
      become: yes

    - name: Remove existing Auctopus Docker repository if present
      file:
        path: "{{ auctopus_docker_dest_dir }}"
        state: absent
        force: yes
      become: yes

    - name: Clone the Auctopus Docker repository
      git:
        repo: "{{ auctopus_docker_repo_url }}"
        dest: "{{ auctopus_docker_dest_dir }}"
        version: main
      become: yes

    - name: Replace value in backend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/automation/prod/env/backend.env"
        regexp: '^FRONTEND_HOST=.*$'
        line: 'FRONTEND_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'controller'

    - name: Replace value in frontend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/automation/prod/env/frontend.env"
        regexp: '^REACT_APP_BACKEND_HOST=.*$'
        line: 'REACT_APP_BACKEND_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'controller'

    - name: Replace value in backend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/runnerserver/prod/env/runnerserver.env"
        regexp: '^CONTROLLER_HOST=.*$'
        line: 'CONTROLLER_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'runner'

    - name: Run build_os_playbook_docker.yml 
      include_tasks: build_os_playbook_docker.yml
