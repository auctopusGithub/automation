- name: Master Setup repository
  hosts: localhost
  gather_facts: yes

  vars:
    auctopus_docker_repo_url: "{{ lookup('env', 'AUCTOPUS_DOCKER_REPO_URL') }}"
    auctopus_docker_dest_dir: "{{ playbook_dir }}/auctopus_docker"
    anisble_ssh_user: "{{ lookup('env', 'ANSIBLE_SSH_USER') }}"
    ansible_ssh_pass: "{{ lookup('env', 'ANSIBLE_SSH_PASS') }}"
    ansible_become_pass: "{{ lookup('env', 'ANSIBLE_BECOME_PASS') }}" 
    server_ip: "{{ lookup('env', 'SERVER_IP') }}"
    github_username: "{{ lookup('env', 'GITHUB_USERNAME') }}"
    deployment_type: "{{ lookup('env', 'DEPLOYMENT_TYPE') }}"
    github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
    docker_token: "{{ lookup('env', 'DOCKER_TOKEN') }}"
    docker_username: "{{ lookup('env', 'DOCKER_USERNAME') }}"
    server_port: "{{ lookup('env', 'SERVER_PORT') }}"

    
  tasks:
    - name: Check if port {{ server_port }} is listening
      command: ss -tuln | grep "{{ server_port }}"
      register: port_check

    - name: Display success message
      debug:
        msg: "Port {{ port_check }} status on {{ ansible_hostname }}"
      
    - name: Remove Docker APT sources list
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent
      become: yes

    - name: Remove Docker GPG keyring
      ansible.builtin.file:
        path: /usr/share/keyrings/docker-archive-keyring.gpg
        state: absent
      become: yes

    - name: Validate deployment type
      fail:
        msg: "Invalid deployment type. Please enter 'controller' or 'runner'."
      when: deployment_type not in ['controller', 'runner']
    
    - name: Configure Git with GitHub token
      shell: |
        git config --global credential.helper store
        echo "https://{{ github_username }}:{{ github_token }}@github.com" > ~/.git-credentials
      become: yes

    - name: Remove existing Auctopus Docker repository if present
      file:
        path: "{{ auctopus_docker_dest_dir }}"
        state: absent
        force: yes
      become: yes

    - name: Clone the Auctopus Docker repository
      git:
        repo: "{{ auctopus_docker_repo_url }}"
        dest: "{{ auctopus_docker_dest_dir }}"
        version: main
      become: yes

    - name: Replace value in backend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/automation/prod/env/backend.env"
        regexp: '^FRONTEND_HOST=.*$'
        line: 'FRONTEND_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'controller'

    - name: Replace value in backend .env file with server port
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/automation/prod/env/backend.env"
        regexp: '^FRONTEND_PORT=.*$'
        line: 'FRONTEND_PORT={{ server_port }}'
      become: yes
      when: deployment_type == 'controller'

    - name: Replace value in frontend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/automation/prod/env/frontend.env"
        regexp: '^REACT_APP_BACKEND_HOST=.*$'
        line: 'REACT_APP_BACKEND_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'controller'

    - name: Replace value in backend .env file with server IP
      lineinfile:
        path: "{{ auctopus_docker_dest_dir }}/runnerserver/prod/env/runnerserver.env"
        regexp: '^CONTROLLER_HOST=.*$'
        line: 'CONTROLLER_HOST={{ server_ip }}'
      become: yes
      when: deployment_type == 'runner'

    - name: Run build_os_playbook_docker.yml 
      include_tasks: build_os_playbook_docker.yml

    - name: Update SSH configuration for runner deployment type
      block:
        - name: Add KexAlgorithms to /etc/ssh/ssh_config
          lineinfile:
            path: /etc/ssh/ssh_config
            line: "KexAlgorithms diffie-hellman-group14-sha1,ecdh-sha2-nistp256,diffie-hellman-group14-sha256"
            create: yes
            state: present
            regexp: '^KexAlgorithms'
            validate: 'sshd -T -f %s'
        
        - name: Add HostKeyAlgorithms to /etc/ssh/ssh_config
          lineinfile:
            path: /etc/ssh/ssh_config
            line: "HostKeyAlgorithms +ssh-rsa,ecdsa-sha2-nistp256"
            create: yes
            state: present
            regexp: '^HostKeyAlgorithms'
            validate: 'sshd -T -f %s'
      when: deployment_type == 'runner
      
    - name: Reboot the server
      command: sudo reboot
      become: yes
      become_method: sudo
      vars:
        ansible_become_pass: "{{ lookup('env', 'ANSIBLE_BECOME_PASS') }}"
    
