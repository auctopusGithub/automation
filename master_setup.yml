---
- name: Master Setup repository
  hosts: localhost
  become: yes
  vars_prompt:
    - name: "github_username"
      prompt: "Enter your GitHub username"
      private: no
    - name: "github_token"
      prompt: "Enter your GitHub personal access token"
      private: yes

  vars:
    # Linux Deployment repository
    linux_deployment_repo_url: "https://github.com/auctopusGithub/linux_deployment.git"
    linux_deployment_dest_dir: "{{ playbook_dir }}/linux_deployment"

    # Auctopus Docker repository
    auctopus_docker_repo_url: "https://github.com/auctopusGithub/auctopus_automation_dev.git"
    auctopus_docker_dest_dir: "{{ playbook_dir }}/auctopus_docker"

  tasks:
    - name: Ensure Git is installed
      ansible.builtin.package:
        name: git
        state: present
      when: ansible_os_family == "Debian"

    - name: Configure Git with GitHub token
      ansible.builtin.git_config:
        name: "https://github.com/{{ github_username }}"
        value: "{{ github_token }}"
        scope: global

    - name: Remove existing Linux Deployment repository if present
      ansible.builtin.file:
        path: "{{ linux_deployment_dest_dir }}"
        state: absent
        force: yes

    - name: Clone the Linux Deployment repository
      ansible.builtin.git:
        repo: "{{ linux_deployment_repo_url }}"
        dest: "{{ linux_deployment_dest_dir }}"
        version: main

    - name: Remove existing Auctopus Docker repository if present
      ansible.builtin.file:
        path: "{{ auctopus_docker_dest_dir }}"
        state: absent
        force: yes

    - name: Clone the Auctopus Docker repository
      ansible.builtin.git:
        repo: "{{ auctopus_docker_repo_url }}"
        dest: "{{ auctopus_docker_dest_dir }}"
        version: prod

- name: Include the build_os_playbook_docker.yml playbook
  import_playbook: "{{ linux_deployment_dest_dir }}/build_os_playbook_docker.yml"
  vars:
    linux_deployment_dest_dir: "{{ playbook_dir }}/linux_deployment"


- name: Master Setup repository
  hosts: localhost
  become: yes

  vars:
    # Linux Deployment repository
    linux_deployment_dest_dir: "{{ playbook_dir }}/linux_deployment"

  tasks:
    - name: Delete the Linux Deployment repository
      ansible.builtin.file:
        path: "{{ linux_deployment_dest_dir }}"
        state: absent
