- name: Master Setup repository
  hosts: localhost
  gather_facts: yes

  vars_prompt:
    - name: github_username
      prompt: "Enter your GitHub username"
      private: no
    - name: github_token
      prompt: "Enter your GitHub personal access token"
      private: yes
    - name: server_ip
      prompt: "Enter the server IP address"
      private: no
    - name: deployment_type
      prompt: "Enter the deployment type (controller, runner)"
      private: no

  vars:
    # Linux Deployment repository
    linux_deployment_repo_url: "https://github.com/auctopusGithub/linux_deployment.git"
    linux_deployment_dest_dir: "{{ playbook_dir }}/linux_deployment"

    # Auctopus Docker repository
    auctopus_docker_repo_url: "https://github.com/auctopusGithub/auctopus_docker.git"
    auctopus_docker_dest_dir: "{{ playbook_dir }}/auctopus_docker"

  tasks:
    - name: Ensure Git is installed
      apt:
        name: git
        state: present
      become: yes
      when: ansible_os_family == "Debian"

    - block:
        - name: Loop until SSH credentials are correct
          vars_prompt:
            - name: ansible_ssh_user
              prompt: "Enter SSH username"
            - name: ansible_ssh_pass
              prompt: "Enter SSH password"
              private: yes
            - name: ansible_become_pass
              prompt: "Enter SSH become password"
              private: yes
          block:
            - name: Validate SSH credentials
              expect:
                command: ssh -o StrictHostKeyChecking=no {{ ansible_ssh_user }}@{{ server_ip }}
                responses:
                  password: "{{ ansible_ssh_pass }}"
              register: ssh_login
              until: ssh_login.rc == 0
              retries: 5
              delay: 5
              ignore_errors: yes
    
            - name: Fail if SSH credentials are incorrect after retries
              fail:
                msg: "SSH credentials are incorrect after multiple attempts."
              when: ssh_login.rc != 0
      become: yes

    - name: Configure Git with GitHub token
      shell: |
        git config --global credential.helper store
        echo "https://{{ github_username }}:{{ github_token }}@github.com" > ~/.git-credentials
      become: yes

    - name: Remove existing Linux Deployment repository if present
      file:
        path: "{{ linux_deployment_dest_dir }}"
        state: absent
        force: yes
      become: yes

    - name: Clone the Linux Deployment repository
      git:
        repo: "{{ linux_deployment_repo_url }}"
        dest: "{{ linux_deployment_dest_dir }}"
        version: main
      become: yes

    - name: Remove existing Auctopus Docker repository if present
      file:
        path: "{{ auctopus_docker_dest_dir }}"
        state: absent
        force: yes
      become: yes

    - name: Clone the Auctopus Docker repository
      git:
        repo: "{{ auctopus_docker_repo_url }}"
        dest: "{{ auctopus_docker_dest_dir }}"
        version: main
      become: yes

    - name: Check if build_os_playbook_docker.yml exists
      stat:
        path: "{{ linux_deployment_dest_dir }}/build_os_playbook_docker.yml"
      become: yes
      register: build_os_playbook_docker

    - name: Include the build_os_playbook_docker.yml playbook
      include_tasks: "{{ linux_deployment_dest_dir }}/build_os_playbook_docker.yml"
      when: build_os_playbook_docker.stat.exists

    - name: Delete the Linux Deployment repository
      ansible.builtin.file:
        path: "{{ linux_deployment_dest_dir }}"
        state: absent
      become: yes
