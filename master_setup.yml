---
- name: Master Setup repository
  hosts: localhost
  gather_facts: yes

  vars_prompt:
    # - name: ansible_ssh_user
    #   prompt: "Enter SSH username"
    #   private: no
    # - name: ansible_ssh_pass
    #   prompt: "Enter SSH password"
    #   private: yes
    # - name: ansible_become_pass
    #   prompt: "Enter become password"
    #   private: yes
    # - name: "github_username"
    #   prompt: "Enter your GitHub username"
    #   private: no
    - name: "github_token"
      prompt: "Enter your GitHub personal access token"
      private: yes 

  vars:
    # Linux Deployment repository
    ansible_ssh_user: "automation"
    ansible_ssh_pass: "automation@321"
    ansible_become_pass: "automation@321"
    github_username: "sunnyauctOpus"

    # Linux Deployment repository
    linux_deployment_repo_url: "https://github.com/auctopusGithub/linux_deployment.git"
    linux_deployment_dest_dir: "{{ playbook_dir }}/linux_deployment"

    # Auctopus Docker repository
    auctopus_docker_repo_url: "https://github.com/auctopusGithub/auctopus_automation_dev.git"
    auctopus_docker_dest_dir: "{{ playbook_dir }}/auctopus_docker"

  tasks:
    # - name: Ensure Git is installed
    #   apt:
    #     name: git
    #     state: present
    #   become: yes
    #   when: ansible_os_family == "Debian"

    # - name: Configure Git with GitHub token
    #   shell: |
    #     git config --global credential.helper store
    #     echo "https://{{ github_username }}:{{ github_token }}@github.com" > ~/.git-credentials
    #   become: yes

    # - name: Remove existing Linux Deployment repository if present
    #   file:
    #     path: "{{ linux_deployment_dest_dir }}"
    #     state: absent
    #     force: yes
    #   become: yes

    # - name: Clone the Linux Deployment repository
    #   git:
    #     repo: "{{ linux_deployment_repo_url }}"
    #     dest: "{{ linux_deployment_dest_dir }}"
    #     version: main
    #   become: yes

    # - name: Remove existing Auctopus Docker repository if present
    #   file:
    #     path: "{{ auctopus_docker_dest_dir }}"
    #     state: absent
    #     force: yes
    #   become: yes

    # - name: Clone the Auctopus Docker repository
    #   git:
    #     repo: "{{ auctopus_docker_repo_url }}"
    #     dest: "{{ auctopus_docker_dest_dir }}"
    #     version: prod
    #   become: yes

    - name: Check if build_os_playbook_docker.yml exists
      stat:
        path: "{{ linux_deployment_dest_dir }}/build_os_playbook_docker.yml"
      become: yes
      register: build_os_playbook_docker

    - name: Include the build_os_playbook_docker.yml playbook
      include_tasks: "{{ linux_deployment_dest_dir }}/build_os_playbook_docker.yml"
      when: build_os_playbook_docker.stat.exists

    - name: Delete the Linux Deployment repository
      ansible.builtin.file:
        path: "{{ linux_deployment_dest_dir }}"
        state: absent