- name: Playbook to build OS and install Docker

  block:
  
    - name: Remove Docker APT source list if it exists
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent
        become: yes

    - name: Remove Docker GPG keyring if it exists
      ansible.builtin.file:
        path: /usr/share/keyrings/docker-archive-keyring.gpg
        state: absent
      become: yes


    - name: Set service_file_path variable
      set_fact:
        service_file_path: /etc/systemd/system/auctopus_docker.service

    - name: Set controller working_directory variable
      set_fact:
        working_directory: "{{ auctopus_docker_dest_dir }}/automation/prod"
      when: deployment_type == "controller"

    - name: Set runner working_directory variable
      set_fact:
        working_directory: "{{ auctopus_docker_dest_dir }}/runnerserver/prod"
      when: deployment_type == "runner"

    - name: Adding Docker Prerequisites
      include_tasks: docker/install_docker_prerequisites.yml

    - name: Adding Docker and Compose packages
      include_tasks: docker/install_docker_and_compose.yml

    - name: Create Docker Service
      include_tasks: docker/create_docker_service.yml
    
    - name: Docker login to Docker Hub
      ansible.builtin.command:
        cmd: echo {{docker_token}} | docker login -u auctopustechnologies --password-stdin
      become: yes

    - name: Enable and Start Auctopus Docker Service
      ansible.builtin.systemd:
        name: auctopus_docker
        enabled: yes
        state: started
      become: yes

    - name: Run Docker Setup
      include_tasks: "{{ auctopus_docker_dest_dir }}/automation/prod/anisible_fresh_start.yml"
      when: deployment_type == "controller"

    - name: Run Docker Setup
      include_tasks: "{{ auctopus_docker_dest_dir }}/runnerserver/prod/anisible_fresh_start.yml"
      when: deployment_type == "runner"

    

    
